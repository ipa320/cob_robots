<?xml version="1.0"?>
<launch>

	<arg name="robot" default="$(optenv ROBOT !!NO_ROBOT_SET!!)"/>
	<arg name="pkg_hardware_config" default="$(find cob_hardware_config)"/>
	<arg name="component_name"/>
	<arg name="debug" default="false"/>
	

	<group ns="$(arg component_name)">

		<!-- load Cartesian controller config -->
		<rosparam command="load" file="$(arg pkg_hardware_config)/$(arg robot)/config/$(arg component_name)_cartesian_controller.yaml"/>
		<rosparam command="load" file="$(arg pkg_hardware_config)/$(arg robot)/config/$(arg component_name)_self_collision.yaml"/>

		<!-- Cartesian controllers -->
		<node pkg="cob_twist_controller" type="cob_twist_controller_node" name="twist_controller" cwd="node" respawn="false" output="screen">
			<remap from="base/odometry" to="/base/odometry_controller/odometry"/>
			<remap from="base/command" to="/base/twist_mux/command_syncmm"/>
		</node>
		<node pkg="cob_frame_tracker" type="cob_frame_tracker_node" name="frame_tracker" cwd="node" respawn="false" output="screen"/>
		<node pkg="cob_frame_tracker" type="interactive_frame_target_node" name="interactive_target" cwd="node" respawn="false" output="screen"/>
		
		<node pkg="cob_obstacle_distance" type="cob_obstacle_distance" name="obstacle_distance" cwd="node" respawn="false" output="screen" />
<!--
		<node pkg="cob_cartesian_controller" type="cartesian_controller_node" name="cartesian_controller"  cwd="node" respawn="false" output="screen">
			<param name="target_frame" type="str" value="cartesian_target"/>
		</node>
-->

		<group if="$(arg debug)">
			<node pkg="cob_twist_controller" type="debug_evaluate_jointstates_node" name="debug_evaluate_jointstates_node" cwd="node" respawn="false" output="screen" />
			<node pkg="cob_twist_controller" type="debug_trajectory_marker_node" name="debug_trajectory_marker_node" cwd="node" respawn="false" output="screen" />
			<node pkg="cob_obstacle_distance" type="debug_obstacle_distance_node" name="debug_obstacle_distance_node" cwd="node" respawn="false" output="screen" />
			<node pkg="cob_obstacle_distance" type="test_interactive_obstacle_node.py" name="test_interactive_obstacle_node" cwd="node" respawn="false" output="screen" />
		</group>

	</group>

</launch>
