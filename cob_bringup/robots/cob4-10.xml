<?xml version="1.0"?>
<launch>

    <!-- args -->
    <arg name="robot" value="cob4-10"/>
    <arg name="cob4-10-b1" default="localhost"/>
    <arg name="cob4-10-t1" default="localhost"/>
    <arg name="cob4-10-t2" default="localhost"/>
    <arg name="cob4-10-t3" default="localhost"/>
    <arg name="cob4-10-s1" default="localhost"/>
    <arg name="cob4-10-h1" default="localhost"/>
    <arg name="env-script" default="$(find cob_bringup)/env.sh"/>

    <!-- upload robot description -->
    <include file="$(find cob_hardware_config)/common/upload_robot.launch">
        <arg name="robot" value="$(arg robot)"/>
    </include>

    <!-- upload default configuration parameters -->
    <include file="$(find cob_default_robot_config)/$(arg robot)/upload_param_$(arg robot).launch"/>

    <group>
        <machine name="cob4-10-b1" address="$(arg cob4-10-b1)" env-loader="$(arg env-script)" default="true" timeout="30"/>

        <include file="$(find cob_bringup)/tools/pc_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="pc" value="$(arg cob4-10-b1)"/>
        </include>

        <!-- startup hardware -->
        <include file="$(find cob_bringup)/drivers/sick_s300.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="name" value="base_laser_front"/>
        </include>
        <include file="$(find cob_bringup)/drivers/sick_s300.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="name" value="base_laser_right"/>
        </include>
        <include file="$(find cob_bringup)/drivers/sick_s300.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="name" value="base_laser_left"/>
        </include>
        <include file="$(find cob_bringup)/drivers/scan_unifier.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/drivers/sick_flexisoft.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <!--include file="$(find cob_bringup)/tools/collision_monitor.launch">
        </include-->
        <node pkg="rostopic" type="rostopic" args="pub /safety_controller/state_is_valid std_msgs/Bool 'data: true' -r10" name="fake_collission_monitor" output="screen"/>

        <include file="$(find cob_bringup)/drivers/canopen_402.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="component_name" value="base"/>
            <arg name="can_device" value="can0"/>
        </include>
        <include file="$(find cob_bringup)/controllers/base_controller_plugin.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>

        <!-- start additional packages -->
        <include file="$(find cob_bringup)/drivers/phidgets.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/tools/diagnostics_aggregator.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/tools/emergency_stop_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/tools/battery_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/tools/teleop.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/tools/base_collision_observer.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/drivers/light.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="component_name" value="light_base"/>
        </include>
        <!--include file="$(find cob_bringup)/drivers/bms.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include-->
        <include file="$(find cob_bringup)/drivers/powerstate_phidget.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/tools/docker_control.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="multi_station" default="true"/>
        </include>
        <!-- aggregated robot_state_publisher -->
        <include file="$(find cob_bringup)/tools/robot_state_publisher.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
    </group>

    <group>
        <machine name="cob4-10-t1" address="$(arg cob4-10-t1)" env-loader="$(arg env-script)" default="true" timeout="30"/>

        <include file="$(find cob_script_server)/launch/script_server.launch"/>
        <include file="$(find cob_bringup)/tools/android.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/tools/behavior.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>
        <include file="$(find cob_bringup)/tools/pc_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="pc" value="$(arg cob4-10-t1)"/>
        </include>

        <!-- startup hardware -->
        <include file="$(find cob_bringup)/drivers/canopen_402.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="component_name" value="torso"/>
            <arg name="can_device" value="can0"/>
        </include>
        <include file="$(find cob_bringup)/controllers/generic_controller.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="component_name" value="torso"/>
        </include>


        <group ns="sensorring">
	          <node name="sensorring_init_relay" pkg="service_tools" type="service_relay" args="driver/init /head/driver/init" respawn="false" output="screen"/>
	          <node name="sensorring_recover_relay" pkg="service_tools" type="service_relay" args="driver/recover /head/driver/recover" respawn="false" output="screen"/>
	          <node name="sensorring_load_relay" pkg="service_tools" type="service_relay" args="controller_manager/load_controller /head/controller_manager/load_controller" respawn="false" output="screen"/>
	          <node name="sensorring_switch_relay" pkg="service_tools" type="service_relay" args="controller_manager/switch_controller /head/controller_manager/switch_controller" respawn="false" output="screen"/>
	          <node name="sensorring_joint_states_relay" pkg="topic_tools" type="relay" args="/head/joint_states joint_states" respawn="false" output="screen"/>

	          <rosparam param="joint_names">[sensorring_joint]</rosparam>
	          <param name="joint_trajectory_controller_name" value="sensorring_joint_trajectory_controller"/>
	          <param name="sensorring_joint_trajectory_controller" value="forward"/>
	          <node pkg="cob_control_mode_adapter" type="cob_control_mode_adapter_node" name="control_mode_adapter" cwd="node" respawn="false" output="screen"/>
        </group>
        <remap from="/head/sensorring_joint_trajectory_controller/follow_joint_trajectory" to="/sensorring/joint_trajectory_controller/follow_joint_trajectory"/>

        <include file="$(find cob_bringup)/drivers/canopen_402.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="component_name" value="head"/>
            <arg name="can_device" value="can1"/>
        </include>
        <include file="$(find cob_bringup)/controllers/generic_controller.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="component_name" value="head"/>
        </include>

        <include file="$(find cob_bringup)/drivers/openni2.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="name" value="torso_cam3d_right"/>
            <arg name="device_id" value="#1"/>
            <!--arg name="data_skip" value="1"/-->
            <arg name="num_worker_threads" value="2"/>
        </include>
        <include file="$(find cob_bringup)/tools/hz_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="yaml_name" value="torso_cam3d_right"/>
        </include>
        <include file="$(find cob_bringup)/drivers/image_flip_nodelet.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="camera_name" value="torso_cam3d_right"/>
            <arg name="nodelet_manager" value="torso_cam3d_right_nodelet_manager"/>
            <arg name="start_manager" value="false"/>
        </include>

        <include file="$(find cob_bringup)/drivers/light.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="component_name" value="light_torso"/>
        </include>
    </group>

    <group>
        <machine name="cob4-10-t2" address="$(arg cob4-10-t2)" env-loader="$(arg env-script)" default="true" timeout="30"/>

        <include file="$(find cob_bringup)/tools/pc_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="pc" value="$(arg cob4-10-t2)"/>
        </include>

        <include file="$(find realsense_camera)/launch/r200_nodelet_rgbd.launch">
            <arg name="camera" value="torso_cam3d_down"/>
            <arg name="num_worker_threads" value="2"/>
        </include>
        <include file="$(find cob_bringup)/tools/hz_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="yaml_name" value="torso_cam3d_down"/>
        </include>
        <include file="$(find cob_bringup)/drivers/image_flip_nodelet.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="camera_name" value="torso_cam3d_down"/>
            <arg name="nodelet_manager" value="torso_cam3d_down_nodelet_manager"/>
            <arg name="start_manager" value="false"/>
        </include>
    </group>

    <group>
        <machine name="cob4-10-t3" address="$(arg cob4-10-t3)" env-loader="$(arg env-script)" default="true" timeout="30"/>

        <include file="$(find cob_bringup)/tools/pc_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="pc" value="$(arg cob4-10-t3)"/>
        </include>

        <include file="$(find cob_bringup)/drivers/openni2.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="name" value="torso_cam3d_left"/>
            <arg name="device_id" value="#1"/>
            <!--arg name="data_skip" value="1"/-->
            <arg name="num_worker_threads" value="2"/>
        </include>
        <include file="$(find cob_bringup)/tools/hz_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="yaml_name" value="torso_cam3d_left"/>
        </include>
        <include file="$(find cob_bringup)/drivers/image_flip_nodelet.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="camera_name" value="torso_cam3d_left"/>
            <arg name="nodelet_manager" value="torso_cam3d_left_nodelet_manager"/>
            <arg name="start_manager" value="false"/>
        </include>
    </group>

    <group>
        <machine name="cob4-10-s1" address="$(arg cob4-10-s1)" env-loader="$(arg env-script)" default="true" timeout="30"/>

        <include file="$(find cob_bringup)/tools/pc_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="pc" value="$(arg cob4-10-s1)"/>
        </include>

        <include file="$(find cob_bringup)/drivers/openni2.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="name" value="sensorring_cam3d"/>
            <arg name="data_skip" value="3"/>
            <arg name="num_worker_threads" value="2"/>
        </include>
        <include file="$(find cob_bringup)/tools/hz_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="yaml_name" value="sensorring_cam3d"/>
        </include>
        <include file="$(find cob_bringup)/drivers/image_flip_nodelet.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="camera_name" value="sensorring_cam3d"/>
            <arg name="nodelet_manager" value="sensorring_cam3d_nodelet_manager"/>
        </include>
    </group>

    <group>
        <machine name="cob4-10-h1" address="$(arg cob4-10-h1)" env-loader="$(arg env-script)" default="true" timeout="30"/>

        <include file="$(find cob_bringup)/tools/pc_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="pc" value="$(arg cob4-10-h1)"/>
        </include>

        <include file="$(find cob_bringup)/drivers/sound.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>

        <include file="$(find cob_bringup)/drivers/mimic.launch"/>

       <include file="$(find cob_bringup)/drivers/usb_camera_node.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="camera_name" value="head_cam"/>
        </include>
        <include file="$(find cob_bringup)/tools/hz_monitor.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="yaml_name" value="head_cam"/>
        </include>
        <include file="$(find cob_bringup)/drivers/image_flip.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="camera_name" value="head_cam"/>
            <arg name="colorimage_in" value="/head_cam/image_rect_color"/>
            <arg name="colorimage_out" value="/head_cam_upright/image_rect_color"/>
        </include>
    </group>

    <machine name="cob4-10-b1" address="$(arg cob4-10-b1)" env-loader="$(arg env-script)" default="true" timeout="30"/>

</launch>
