<?xml version="1.0"?>
<launch>

  <arg name="robot" />
  <arg name="pkg_hardware_config" default="$(find cob_hardware_config)"/>
  
  <group ns="base">
    <!-- temporary relay -->
    <node name="command_relay" pkg="topic_tools" type="relay" args="/base/controller/command /base/base_controller/command" cwd="node" respawn="true" output="screen"/>
    <node name="command_direct_relay" pkg="topic_tools" type="relay" args="/base/controller/command_direct /base/base_controller/command_direct" cwd="node" respawn="true" output="screen"/>
    <node name="odometry_relay" pkg="topic_tools" type="relay" args="/base/base_controller/odometry /base/controller/odometry" cwd="node" respawn="true" output="screen"/>
    <node name="joint_state_relay" pkg="topic_tools" type="relay" args="/base/joint_states /joint_states" cwd="node" respawn="true" output="screen"/>
    
    <!-- cob Base Control -->
    <rosparam file="$(find cob_controller_configuration_gazebo)/controller/base/base_controller_cob3_new.yaml" command="load" />

    <!-- Controllers that come up started -->
    <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" args="--timeout 60 --shutdown-timeout 1 joint_state_controller" respawn="true" />
    <node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="--timeout 60 --shutdown-timeout 1 base_fr_caster_rotation_controller base_fl_caster_rotation_controller base_br_caster_rotation_controller base_bl_caster_rotation_controller base_fr_caster_r_wheel_controller base_fl_caster_r_wheel_controller base_br_caster_r_wheel_controller base_bl_caster_r_wheel_controller"/>
    
    <include file="$(find cob_bringup)/drivers/base_driver_new.launch">
      <arg name="sim" value="true"/>
      <arg name="robot" value="$(arg robot)"/>
    </include>
    
    <!-- cob base controller -->
    <include file="$(find cob_bringup)/controllers/base_controller_new.launch">
      <arg name="sim" value="true"/>
      <arg name="robot" value="$(arg robot)"/>
    </include>
    
    <node pkg="cob_controller_configuration_gazebo" type="gazebo_services_base.py" name="gazebo_services_base" cwd="node" respawn="false" output="screen" />
  </group>

  <!-- scan filters-->
  <rosparam command="load" file="$(arg pkg_hardware_config)/$(arg robot)/config/laser_front.yaml" ns="laser_front" />
  <node pkg="cob_sick_s300" type="cob_scan_filter" name="scanner_front_filter" respawn="false" output="screen" ns="laser_front" >
    <remap from="scan" to="/scan_front_raw"/>
    <remap from="scan_filtered" to="/scan_front"/>
  </node>

  <rosparam command="load" file="$(arg pkg_hardware_config)/$(arg robot)/config/laser_rear.yaml" ns="laser_rear" />
  <node pkg="cob_sick_s300" type="cob_scan_filter" name="scanner_rear_filter" respawn="false" output="screen" ns="laser_rear" >
    <remap from="scan" to="/scan_rear_raw"/>
    <remap from="scan_filtered" to="/scan_rear"/>
  </node>

</launch>
