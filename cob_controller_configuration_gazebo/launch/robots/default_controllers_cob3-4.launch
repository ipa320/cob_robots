<?xml version="1.0"?>
<launch>

	<arg name="robot" default="cob3-4"/>

	<!-- controller_utils -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/controller_utils.launch" />

	<!-- Base -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/base_controller_cob3.launch">
		<arg name="robot" value="$(arg robot)"/>
	</include>

	<!-- Head -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_controller.launch">
		<arg name="component_name" value="head"/>
		<arg name="version" value="cob3"/>
	</include>

	<!-- Arm -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_controller.launch">
		<arg name="component_name" value="arm"/>
		<arg name="version" value="lbr"/>
	</include>

	<!-- Gripper -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_controller.launch">
		<arg name="component_name" value="gripper"/>
		<arg name="version" value="sdh"/>
	</include>

	<!-- DSA -->
	<include file="$(find schunk_simulated_tactile_sensors)/ros/launch/simulated_tactile_sensors.launch" />

	<!-- Torso -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_controller.launch">
		<arg name="component_name" value="torso"/>
		<arg name="version" value="cob3_v2"/>
	</include>

	<!-- Tray -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_controller.launch">
		<arg name="component_name" value="tray"/>
		<arg name="version" value="cob3"/>
	</include>
	
	<!-- Tray sensors -->
	<node ns="tray_sensors" name="tray_sensors" pkg="cob_phidgets" type="simulated_range_sensors.py" output="screen">
		<rosparam file="$(find cob_controller_configuration_gazebo)/controller/tray_sensors.yaml" command="load" />
	</node>

	<!-- start additional components -->
	<include file="$(find cob_sound)/ros/launch/sound.launch" />
	<include file="$(find cob_bringup)/drivers/light.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<include file="$(find cob_bringup)/tools/base_collision_observer.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<include file="$(find cob_bringup)/drivers/battery_voltage_filter.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<include file="$(find cob_bringup)/tools/diagnostics_aggregator.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<node name="cam3d_relay" pkg="topic_tools" type="relay" args="/cam3d/rgb/image_raw /cam3d/rgb/image_color" respawn="false" output="screen"/>
	<node name="cam3d_relay_depth_image" pkg="topic_tools" type="relay" args="/cam3d/depth/image_raw /cam3d/depth/image" respawn="false" output="screen"/>
	<node name="cam3d_relay_depth_points" pkg="topic_tools" type="relay" args="/cam3d/depth_registered/points /cam3d/depth/points" respawn="false" output="screen"/>
	<node name="cam3d_relay_depth_camera_info" pkg="topic_tools" type="relay" args="/cam3d/depth_registered/camera_info /cam3d/depth/camera_info" respawn="false" output="screen"/>
	<include file="$(find cob_cam3d_throttle)/launch/cam3d_throttle.launch" >
		<arg name="namespace" value="/cam3d" />
		<arg name="rate" value="1.0" />
		<arg name="start_manager" value="true"/>
		<arg name="nodelet_manager" value="cam3d_nodelet_manager"/>
	</include>

	<!-- fake components for simulation -->
	<include file="$(find cob_bringup)/drivers/relayboard.launch">
		<arg name="sim" value="true"/>
	</include>
	
	<node pkg="cob_controller_configuration_gazebo" type="gazebo_topics.py" name="gazebo_topics" cwd="node" respawn="false" output="screen" />
	
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-1)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_front"/>
		<param name="topic_name" value="/scan_front"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-2)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_rear"/>
		<param name="topic_name" value="/scan_rear"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-3)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_top"/>
		<param name="topic_name" value="/scan_top"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-4)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="/stereo/left/color_camera"/>
		<param name="topic_name" value="/stereo/left/image_raw"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-5)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="/stereo/right/color_camera"/>
		<param name="topic_name" value="/stereo/right/image_raw"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-6)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="dsa_controller"/>
		<param name="topic_name" value="/dsa_controller/tactile_data"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-7)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="joy"/>
		<param name="topic_name" value="/joy_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-8)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="pc1 CPU Usage"/>
		<param name="topic_name" value="/pc1_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-9)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="pc2 CPU Usage"/>
		<param name="topic_name" value="/pc2_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-10)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="Wifi Status (ddwrt)"/>
		<param name="topic_name" value="/wifi_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-11)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="torso_controller"/>
		<param name="topic_name" value="/torso_controller/state"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-12)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="tray_controller"/>
		<param name="topic_name" value="/tray_controller/state"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-13)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="head_controller"/>
		<param name="topic_name" value="/head_controller/state"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-14)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="arm_controller"/>
		<param name="topic_name" value="/arm_controller/state"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-15)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="gripper_controller"/>
		<param name="topic_name" value="/gripper_controller/state"/>
	</node>

</launch>
