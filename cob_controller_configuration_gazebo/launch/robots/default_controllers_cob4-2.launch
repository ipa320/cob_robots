<?xml version="1.0"?>
<launch>

	<arg name="robot" default="cob4-2"/>
	
	<!-- robot state publisher -->
	<node ns="base" pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="50.0" />
		<param name="tf_prefix" type="string" value="" />
	</node>
	<node ns="sensorring" pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="50.0" />
		<param name="tf_prefix" type="string" value="" />
	</node>
	<node ns="arm_left" pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="50.0" />
		<param name="tf_prefix" type="string" value="" />
	</node>
	<node ns="arm_right" pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="50.0" />
		<param name="tf_prefix" type="string" value="" />
	</node>
	
	<!-- Base -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/base_controller_cob4_new.launch">
		<arg name="robot" value="$(arg robot)"/>
	</include>
		
	<include file="$(find cob_bringup)/drivers/relayboard.launch">
		<arg name="sim" value="true"/>
	</include>
	
	<!-- Sensorring -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_controller_new.launch">
		<arg name="robot" value="$(arg robot)"/>
		<arg name="component_name" value="sensorring"/>
	</include>
	
	<!-- Arms -->
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_controller_new.launch">
		<arg name="robot" value="$(arg robot)"/>
		<arg name="component_name" value="arm"/>
		<arg name="side" value="_left"/>
	</include>
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_cartesian_controller_new.launch">
		<arg name="robot" value="$(arg robot)"/>
		<arg name="component_name" value="arm"/>
		<arg name="side" value="_left"/>
	</include>
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_controller_new.launch">
		<arg name="robot" value="$(arg robot)"/>
		<arg name="component_name" value="arm"/>
		<arg name="side" value="_right"/>
	</include>
	<include file="$(find cob_controller_configuration_gazebo)/launch/components/generic_cartesian_controller_new.launch">
		<arg name="robot" value="$(arg robot)"/>
		<arg name="component_name" value="arm"/>
		<arg name="side" value="_right"/>
	</include>
	
	
	<!-- camera nodelets -->
	<include file="$(find cob_bringup)/drivers/image_flip.launch">
		<arg name="robot" value="$(arg robot)"/>
		<arg name="name" value="torso_cam3d_left"/>
	</include>
		
	<include file="$(find cob_bringup)/drivers/image_flip.launch">
		<arg name="robot" value="$(arg robot)"/>
		<arg name="name" value="torso_cam3d_right"/>
	</include>
	
	<!-- start additional components -->
	<include file="$(find cob_bringup)/tools/base_collision_observer.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<include file="$(find cob_bringup)/tools/diagnostics_aggregator.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	
	<include file="$(find cob_script_server)/launch/script_server.launch" />
	
	<node pkg="cob_controller_configuration_gazebo" type="gazebo_topics.py" name="gazebo_topics" cwd="node" respawn="false" output="screen" />
	
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-1)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_front"/>
		<param name="topic_name" value="/scan_front"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-2)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_left"/>
		<param name="topic_name" value="/scan_left"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-3)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_right"/>
		<param name="topic_name" value="/scan_right"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-4)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="joy"/>
		<param name="topic_name" value="/joy_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-5)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="b1 CPU Usage"/>
		<param name="topic_name" value="/b1_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-6)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="t1 CPU Usage"/>
		<param name="topic_name" value="/t1_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-7)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="t2 CPU Usage"/>
		<param name="topic_name" value="/t2_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-8)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="t3 CPU Usage"/>
		<param name="topic_name" value="/t3_usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-9)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="Wifi Status (ddwrt)"/>
		<param name="topic_name" value="/wifi_status"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-11)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="sensorring_controller"/>
		<param name="topic_name" value="/sensorring/joint_states"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-13)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="arm_right_controller"/>
		<param name="topic_name" value="/arm_right/joint_states"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics-14)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="arm_left_controller"/>
		<param name="topic_name" value="/arm_left/joint_states"/>
	</node>

</launch>
