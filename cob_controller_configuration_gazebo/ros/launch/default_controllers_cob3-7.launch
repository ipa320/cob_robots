<?xml version="1.0"?>
<launch>

	<arg name="robot"/>

	<!-- controller_manager -->
	<include file="$(find cob_controller_configuration_gazebo)/ros/launch/controller_manager.launch" />

	<!-- Base -->
	<include file="$(find cob_controller_configuration_gazebo)/ros/launch/base_controller_cob.launch">
		<arg name="robot" value="$(arg robot)"/>
	</include>

	<!-- Head -->
	<include file="$(find cob_controller_configuration_gazebo)/ros/launch/head_controller.launch"/>

	<!-- Arm -->
	<include file="$(find cob_controller_configuration_gazebo)/ros/launch/arm_controller_cob.launch">
		<arg name="robot" value="$(arg robot)"/>
	</include>

	<!-- SDH -->
	<include file="$(find cob_controller_configuration_gazebo)/ros/launch/sdh_controller.launch"/>

	<!-- Torso -->
	<include file="$(find cob_controller_configuration_gazebo)/ros/launch/torso_v1_controller.launch"/>

	<!-- Tray -->
	<include file="$(find cob_controller_configuration_gazebo)/ros/launch/tray_controller.launch"/>

	<!-- start additional components -->
	<include file="$(find cob_sound)/ros/launch/sound.launch" />
	<include file="$(find cob_bringup)/components/light.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<include file="$(find cob_bringup)/tools/base_collision_observer.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<include file="$(find cob_bringup)/components/voltage_filter.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<include file="$(find cob_bringup)/tools/diagnostics_aggregator.launch" >
		<arg name="robot" value="$(arg robot)"/>
	</include>
	<node name="cam3d_relay" pkg="topic_tools" type="relay" args="/cam3d/rgb/image_raw /cam3d/rgb/image_color" respawn="false" output="screen"/>
	<include file="$(find cob_cam3d_throttle)/launch/cam3d_throttle.launch" >
		<arg name="namespace" value="/cam3d" />
		<arg name="rate" value="1.0" />
		<arg name="start_manager" value="true"/>
		<arg name="nodelet_manager" value="cam3d_nodelet_manager"/>
	</include>

	<!-- fake components for simulation -->
	<node pkg="cob_controller_configuration_gazebo" type="gazebo_services.py" name="gazebo_services" cwd="node" respawn="false" output="screen" />
	<include file="$(find cob_bringup)/components/relayboard.launch">
		<arg name="sim" value="true"/>
	</include>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_front"/>
		<param name="topic_name" value="/scan_front"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_rear"/>
		<param name="topic_name" value="/scan_rear"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="laser_top"/>
		<param name="topic_name" value="/scan_top"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="/stereo/left/color_camera"/>
		<param name="topic_name" value="/stereo/left/image_raw"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="/stereo/right/color_camera"/>
		<param name="topic_name" value="/stereo/right/image_raw"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="dsa_controller"/>
		<param name="topic_name" value="/dsa_controller/tactile_data"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="pc1 CPU Usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="pc2 CPU Usage"/>
	</node>
	<node pkg="cob_controller_configuration_gazebo" type="fake_diagnostics.py" name="$(anon fake_diagnostics)" cwd="node" respawn="false" output="screen" >
		<param name="diagnostics_name" value="Wifi Status (ddwrt)"/>
	</node>

</launch>
