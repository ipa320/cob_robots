cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
#rosbuild_genmsg()
#uncomment if you have defined services
rosbuild_gensrv()

# rostest for robots
SET(robotlist
#cob3-1
#cob3-2
#cob3-3
#cob3-4
#cob3-5
#cob3-6
#cob3-7
#raw3-1
#raw3-2
#raw3-3
#raw3-4
#raw3-5
#raw3-6
#desire
)

# loop through list of robots for testing
FOREACH(robot ${robotlist})
	MESSAGE("testing for robot: ${robot}")
	rosbuild_add_roslaunch_check(robots/${robot}_manual.test.xml robot:=${robot})
	rosbuild_add_roslaunch_check(robots/${robot}_auto.test.xml robot:=${robot})
	rosbuild_add_roslaunch_check(robots/${robot}_manual.test.xml ROBOT=${robot})
	rosbuild_add_roslaunch_check(robots/${robot}_auto.test.xml ROBOT=${robot})
ENDFOREACH(robot)
